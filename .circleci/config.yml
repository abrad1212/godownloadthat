version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2

jobs:
  # Base test configuration for Go library tests Each distinct version should
  # inherit this base, and override (at least) the container image used.
  test:
    parameters:
      v:
        type: string
        default: "latest"
      latest:
        type: boolean
        default: false
    docker:
      - image: "circleci/golang:<< parameters.v >>"
    working_directory: /go/src/github.com/abrad1212/godownloadthat
    steps:
      # Our build steps: we checkout the repo, fetch our deps, lint, and finally
      # run "go test" on the package.
      - checkout
      # Logs the version in our build logs, for posterity
      - run: go version
      - run:
          name: "Fetch dependencies"
          command: >
            go get -t -v ./...
      # Only run gofmt, vet & lint against the latest Go version
      - run:
          name: "Run golint"
          command: >
            if [ "${LATEST}" = true ] && [ -z "${SKIP_GOLINT}" ]; then
              go get -u golang.org/x/lint/golint
              golint ./...
            fi
      - run:
          name: "Run gofmt"
          command: >
            if [[ "${LATEST}" = true ]]; then
              diff -u <(echo -n) <(gofmt -d -e .)
            fi
      - run:
          name: "Run go vet"
          command:  >
            if [[ "${LATEST}" = true ]]; then
              go vet -v ./...
            fi
      - run:
          name: "Run go test"
          command: >
            go test -coverprofile=c.out -v -race ./...
            go tool cover -html=c.out -o coverage_report.html
      - codecov/upload:
          file: coverage_report.html

workflows:
  main:
    jobs:
      - test:
          name: "Go latest"
          v: "latest"
          latest: true
      - test:
          name: "Go v1.12"
          v: "1.12"
      - test:
          name: "Go v1.11"
          v: "1.11"
      - test:
          name: "Go v1.10"
          v: "1.10"
      - test:
          name: "Go v1.9"
          v: "1.9"